<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

       <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
              <!-- 基本属性 url、user、password -->
              <property name="url" value="${druid.url}" />
              <property name="username" value="${druid.username}" />
              <property name="password" value="${druid.password}" />
              <!-- 配置初始化大小、最小、最大 -->
              <property name="initialSize" value="${druid.initialSize}" />
              <property name="minIdle" value="${druid.minIdle}" />
              <property name="maxActive" value="${druid.maxActive}" />
              <!-- 配置获取连接等待超时的时间 -->
              <property name="maxWait" value="${druid.maxWait}" />
              <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
              <property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" />
              <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
              <property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}" />
              <property name="validationQuery" value="${druid.validationQuery}" />
              <property name="testWhileIdle" value="${druid.testWhileIdle}" />
              <property name="testOnBorrow" value="${druid.testOnBorrow}" />
              <property name="testOnReturn" value="${druid.testOnReturn}" />
              <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
              <property name="poolPreparedStatements" value="${druid.poolPreparedStatements}" />
              <property name="maxPoolPreparedStatementPerConnectionSize" value="${druid.maxPoolPreparedStatementPerConnectionSize}" />
              <!-- 配置监控统计拦截的filters -->
              <property name="filters" value="${druid.filters}" />
       </bean>

       <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
              <property name="dataSource" ref="dataSource"/>
       </bean>
       <tx:advice id="txAdvice" transaction-manager="transactionManager">
              <tx:attributes>
                     <tx:method name="insert*" propagation="REQUIRED"/>
                     <tx:method name="delete*" propagation="REQUIRED"/>
                     <tx:method name="update*" propagation="REQUIRED"/>
                     <tx:method name="select*" propagation="REQUIRED" read-only="true"/>
                     <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
                     <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
              </tx:attributes>
       </tx:advice>
       <aop:config>
              <aop:pointcut id="serviceMethod" expression="execution(* com.eyre.spring.mybatis.service.*.*(..))"/>
              <aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice"/>
       </aop:config>

       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
              <property name="dataSource" ref="dataSource"/>
              <property name="mapperLocations" value="classpath:com/eyre/spring/mybatis/mapper/conf/*.xml"/>
              <property name="configLocation" value="classpath:mybatis-config.xml"/>
       </bean>

       <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
              <property name="basePackage" value="com.eyre.spring.mybatis.mapper"/>
              <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
              <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
       </bean>
</beans>